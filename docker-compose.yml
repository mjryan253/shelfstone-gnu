services:
  shelfstone-server:
    build:
      context: ./calibre_api
      dockerfile: Dockerfile
    ports:
      - "8001:6336" # Exposes Shelfstone Server on host port 8001, container port 6336
    volumes:
      # Optional: Mount a volume for Calibre library persistence.
      # Create a directory e.g., './calibre_library_data' on your host machine first.
      - ./calibre_library_data:/root/Calibre Library
      # Optional: Mount a volume for Calibre configuration persistence
      # Create a directory e.g., './calibre_config_data' on your host machine first.
      - ./calibre_config_data:/root/.config/calibre
    environment:
      # Optional: If your app needs to know where the library is, set it here.
      # The CRUD operations in the provided main.py seem to accept library_path as a parameter,
      # so this might not be strictly needed unless there's a default library path expected by Calibre itself.
      # CALIBRE_LIBRARY_PATH: "/root/Calibre Library"
      # Set Python unbuffered mode, good for logging in containers
      PYTHONUNBUFFERED: 1
    # Healthcheck example (optional, but good practice)
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:6336/docs"] # or a more specific health endpoint
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 30s # Give Calibre time to initialize if needed
    restart: unless-stopped

  shelfstone-web:
    build:
      context: ./web-nextjs # Changed to the new Next.js frontend directory
      dockerfile: Dockerfile # Standard Dockerfile name
    ports:
      - "6464:3000" # Exposes Shelfstone Web on host port 6464, container port 3000 (Next.js default)
    depends_on:
      - shelfstone-server # Ensures server is started before web, good for initial API calls
    restart: unless-stopped

volumes:
  calibre_library_data: # Define if you want Docker to manage the volume
    driver: local
  calibre_config_data: # Define if you want Docker to manage the volume
    driver: local

# Note on volumes:
# The current setup uses bind mounts (e.g., ./calibre_library_data:/root/Calibre Library).
# This requires you to create 'calibre_library_data' and 'calibre_config_data' directories
# in the same directory as this docker-compose.yml file on your host machine.
# Alternatively, you can use named volumes managed by Docker (as defined under the 'volumes:' key).
# To use Docker-managed named volumes, change the service volume definitions to:
# - calibre_library_data:/root/Calibre Library
# - calibre_config_data:/root/.config/calibre
